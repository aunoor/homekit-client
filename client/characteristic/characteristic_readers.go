// Code generated by cmd/gen. DO NOT EDIT.

package characteristic

type AccessoryFlags struct {
	ID    uint64
	Value uint32
}

func ReadAccessoryFlags(ch *RawCharacteristic) *AccessoryFlags {
	return &AccessoryFlags{
		ID:    ch.ID,
		Value: ch.Value.MustUint32(),
	}
}

type Active struct {
	ID    uint64
	Value byte
}

func ReadActive(ch *RawCharacteristic) *Active {
	return &Active{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type ActiveIdentifier struct {
	ID    uint64
	Value uint32
}

func ReadActiveIdentifier(ch *RawCharacteristic) *ActiveIdentifier {
	return &ActiveIdentifier{
		ID:    ch.ID,
		Value: ch.Value.MustUint32(),
	}
}

type AdministratorOnlyAccess struct {
	ID    uint64
	Value bool
}

func ReadAdministratorOnlyAccess(ch *RawCharacteristic) *AdministratorOnlyAccess {
	return &AdministratorOnlyAccess{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type AudioFeedback struct {
	ID    uint64
	Value bool
}

func ReadAudioFeedback(ch *RawCharacteristic) *AudioFeedback {
	return &AudioFeedback{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type AirParticulateDensity struct {
	ID    uint64
	Value float64
}

func ReadAirParticulateDensity(ch *RawCharacteristic) *AirParticulateDensity {
	return &AirParticulateDensity{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type AirParticulateSize struct {
	ID    uint64
	Value byte
}

func ReadAirParticulateSize(ch *RawCharacteristic) *AirParticulateSize {
	return &AirParticulateSize{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type AirQuality struct {
	ID    uint64
	Value byte
}

func ReadAirQuality(ch *RawCharacteristic) *AirQuality {
	return &AirQuality{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type BatteryLevel struct {
	ID    uint64
	Value byte
}

func ReadBatteryLevel(ch *RawCharacteristic) *BatteryLevel {
	return &BatteryLevel{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type Brightness struct {
	ID    uint64
	Value int32
}

func ReadBrightness(ch *RawCharacteristic) *Brightness {
	return &Brightness{
		ID:    ch.ID,
		Value: ch.Value.MustInt32(),
	}
}

type ButtonEvent struct {
	ID    uint64
	Value []byte
}

func ReadButtonEvent(ch *RawCharacteristic) *ButtonEvent {
	return &ButtonEvent{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type CarbonMonoxideLevel struct {
	ID    uint64
	Value float64
}

func ReadCarbonMonoxideLevel(ch *RawCharacteristic) *CarbonMonoxideLevel {
	return &CarbonMonoxideLevel{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type CarbonMonoxidePeakLevel struct {
	ID    uint64
	Value float64
}

func ReadCarbonMonoxidePeakLevel(ch *RawCharacteristic) *CarbonMonoxidePeakLevel {
	return &CarbonMonoxidePeakLevel{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type CarbonDioxideDetected struct {
	ID    uint64
	Value byte
}

func ReadCarbonDioxideDetected(ch *RawCharacteristic) *CarbonDioxideDetected {
	return &CarbonDioxideDetected{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CarbonDioxideLevel struct {
	ID    uint64
	Value float64
}

func ReadCarbonDioxideLevel(ch *RawCharacteristic) *CarbonDioxideLevel {
	return &CarbonDioxideLevel{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type CarbonDioxidePeakLevel struct {
	ID    uint64
	Value float64
}

func ReadCarbonDioxidePeakLevel(ch *RawCharacteristic) *CarbonDioxidePeakLevel {
	return &CarbonDioxidePeakLevel{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type CarbonMonoxideDetected struct {
	ID    uint64
	Value byte
}

func ReadCarbonMonoxideDetected(ch *RawCharacteristic) *CarbonMonoxideDetected {
	return &CarbonMonoxideDetected{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type ChargingState struct {
	ID    uint64
	Value byte
}

func ReadChargingState(ch *RawCharacteristic) *ChargingState {
	return &ChargingState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CoolingThresholdTemperature struct {
	ID    uint64
	Value float64
}

func ReadCoolingThresholdTemperature(ch *RawCharacteristic) *CoolingThresholdTemperature {
	return &CoolingThresholdTemperature{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type ColorTemperature struct {
	ID    uint64
	Value uint32
}

func ReadColorTemperature(ch *RawCharacteristic) *ColorTemperature {
	return &ColorTemperature{
		ID:    ch.ID,
		Value: ch.Value.MustUint32(),
	}
}

type ContactSensorState struct {
	ID    uint64
	Value byte
}

func ReadContactSensorState(ch *RawCharacteristic) *ContactSensorState {
	return &ContactSensorState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CurrentAmbientLightLevel struct {
	ID    uint64
	Value float64
}

func ReadCurrentAmbientLightLevel(ch *RawCharacteristic) *CurrentAmbientLightLevel {
	return &CurrentAmbientLightLevel{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type CurrentHorizontalTiltAngle struct {
	ID    uint64
	Value int32
}

func ReadCurrentHorizontalTiltAngle(ch *RawCharacteristic) *CurrentHorizontalTiltAngle {
	return &CurrentHorizontalTiltAngle{
		ID:    ch.ID,
		Value: ch.Value.MustInt32(),
	}
}

type CurrentAirPurifierState struct {
	ID    uint64
	Value byte
}

func ReadCurrentAirPurifierState(ch *RawCharacteristic) *CurrentAirPurifierState {
	return &CurrentAirPurifierState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CurrentSlatState struct {
	ID    uint64
	Value byte
}

func ReadCurrentSlatState(ch *RawCharacteristic) *CurrentSlatState {
	return &CurrentSlatState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CurrentPosition struct {
	ID    uint64
	Value byte
}

func ReadCurrentPosition(ch *RawCharacteristic) *CurrentPosition {
	return &CurrentPosition{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CurrentVerticalTiltAngle struct {
	ID    uint64
	Value int32
}

func ReadCurrentVerticalTiltAngle(ch *RawCharacteristic) *CurrentVerticalTiltAngle {
	return &CurrentVerticalTiltAngle{
		ID:    ch.ID,
		Value: ch.Value.MustInt32(),
	}
}

type CurrentHumidifierDehumidifierState struct {
	ID    uint64
	Value byte
}

func ReadCurrentHumidifierDehumidifierState(ch *RawCharacteristic) *CurrentHumidifierDehumidifierState {
	return &CurrentHumidifierDehumidifierState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CurrentDoorState struct {
	ID    uint64
	Value byte
}

func ReadCurrentDoorState(ch *RawCharacteristic) *CurrentDoorState {
	return &CurrentDoorState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CurrentFanState struct {
	ID    uint64
	Value byte
}

func ReadCurrentFanState(ch *RawCharacteristic) *CurrentFanState {
	return &CurrentFanState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CurrentHeatingCoolingState struct {
	ID    uint64
	Value byte
}

func ReadCurrentHeatingCoolingState(ch *RawCharacteristic) *CurrentHeatingCoolingState {
	return &CurrentHeatingCoolingState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CurrentHeaterCoolerState struct {
	ID    uint64
	Value byte
}

func ReadCurrentHeaterCoolerState(ch *RawCharacteristic) *CurrentHeaterCoolerState {
	return &CurrentHeaterCoolerState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type CurrentRelativeHumidity struct {
	ID    uint64
	Value float64
}

func ReadCurrentRelativeHumidity(ch *RawCharacteristic) *CurrentRelativeHumidity {
	return &CurrentRelativeHumidity{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type CurrentTemperature struct {
	ID    uint64
	Value float64
}

func ReadCurrentTemperature(ch *RawCharacteristic) *CurrentTemperature {
	return &CurrentTemperature{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type CurrentTiltAngle struct {
	ID    uint64
	Value int32
}

func ReadCurrentTiltAngle(ch *RawCharacteristic) *CurrentTiltAngle {
	return &CurrentTiltAngle{
		ID:    ch.ID,
		Value: ch.Value.MustInt32(),
	}
}

type DigitalZoom struct {
	ID    uint64
	Value float64
}

func ReadDigitalZoom(ch *RawCharacteristic) *DigitalZoom {
	return &DigitalZoom{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type FilterLifeLevel struct {
	ID    uint64
	Value float64
}

func ReadFilterLifeLevel(ch *RawCharacteristic) *FilterLifeLevel {
	return &FilterLifeLevel{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type FilterChangeIndication struct {
	ID    uint64
	Value byte
}

func ReadFilterChangeIndication(ch *RawCharacteristic) *FilterChangeIndication {
	return &FilterChangeIndication{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type FirmwareRevision struct {
	ID    uint64
	Value string
}

func ReadFirmwareRevision(ch *RawCharacteristic) *FirmwareRevision {
	return &FirmwareRevision{
		ID:    ch.ID,
		Value: ch.Value.MustString(),
	}
}

type HardwareRevision struct {
	ID    uint64
	Value string
}

func ReadHardwareRevision(ch *RawCharacteristic) *HardwareRevision {
	return &HardwareRevision{
		ID:    ch.ID,
		Value: ch.Value.MustString(),
	}
}

type HeatingThresholdTemperature struct {
	ID    uint64
	Value float64
}

func ReadHeatingThresholdTemperature(ch *RawCharacteristic) *HeatingThresholdTemperature {
	return &HeatingThresholdTemperature{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type HoldPosition struct {
	ID    uint64
	Value bool
}

func ReadHoldPosition(ch *RawCharacteristic) *HoldPosition {
	return &HoldPosition{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type Hue struct {
	ID    uint64
	Value float64
}

func ReadHue(ch *RawCharacteristic) *Hue {
	return &Hue{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type Identify struct {
	ID    uint64
	Value bool
}

func ReadIdentify(ch *RawCharacteristic) *Identify {
	return &Identify{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type ImageRotation struct {
	ID    uint64
	Value float64
}

func ReadImageRotation(ch *RawCharacteristic) *ImageRotation {
	return &ImageRotation{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type ImageMirroring struct {
	ID    uint64
	Value bool
}

func ReadImageMirroring(ch *RawCharacteristic) *ImageMirroring {
	return &ImageMirroring{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type InUse struct {
	ID    uint64
	Value byte
}

func ReadInUse(ch *RawCharacteristic) *InUse {
	return &InUse{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type IsConfigured struct {
	ID    uint64
	Value byte
}

func ReadIsConfigured(ch *RawCharacteristic) *IsConfigured {
	return &IsConfigured{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type LeakDetected struct {
	ID    uint64
	Value byte
}

func ReadLeakDetected(ch *RawCharacteristic) *LeakDetected {
	return &LeakDetected{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type LockControlPoint struct {
	ID    uint64
	Value []byte
}

func ReadLockControlPoint(ch *RawCharacteristic) *LockControlPoint {
	return &LockControlPoint{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type LockCurrentState struct {
	ID    uint64
	Value byte
}

func ReadLockCurrentState(ch *RawCharacteristic) *LockCurrentState {
	return &LockCurrentState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type LockLastKnownAction struct {
	ID    uint64
	Value byte
}

func ReadLockLastKnownAction(ch *RawCharacteristic) *LockLastKnownAction {
	return &LockLastKnownAction{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type LockManagementAutoSecurityTimeout struct {
	ID    uint64
	Value uint32
}

func ReadLockManagementAutoSecurityTimeout(ch *RawCharacteristic) *LockManagementAutoSecurityTimeout {
	return &LockManagementAutoSecurityTimeout{
		ID:    ch.ID,
		Value: ch.Value.MustUint32(),
	}
}

type LockPhysicalControls struct {
	ID    uint64
	Value byte
}

func ReadLockPhysicalControls(ch *RawCharacteristic) *LockPhysicalControls {
	return &LockPhysicalControls{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type LockTargetState struct {
	ID    uint64
	Value byte
}

func ReadLockTargetState(ch *RawCharacteristic) *LockTargetState {
	return &LockTargetState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type Logs struct {
	ID    uint64
	Value []byte
}

func ReadLogs(ch *RawCharacteristic) *Logs {
	return &Logs{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type Manufacturer struct {
	ID    uint64
	Value string
}

func ReadManufacturer(ch *RawCharacteristic) *Manufacturer {
	return &Manufacturer{
		ID:    ch.ID,
		Value: ch.Value.MustString(),
	}
}

type Model struct {
	ID    uint64
	Value string
}

func ReadModel(ch *RawCharacteristic) *Model {
	return &Model{
		ID:    ch.ID,
		Value: ch.Value.MustString(),
	}
}

type MotionDetected struct {
	ID    uint64
	Value bool
}

func ReadMotionDetected(ch *RawCharacteristic) *MotionDetected {
	return &MotionDetected{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type Mute struct {
	ID    uint64
	Value bool
}

func ReadMute(ch *RawCharacteristic) *Mute {
	return &Mute{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type Name struct {
	ID    uint64
	Value string
}

func ReadName(ch *RawCharacteristic) *Name {
	return &Name{
		ID:    ch.ID,
		Value: ch.Value.MustString(),
	}
}

type NightVision struct {
	ID    uint64
	Value bool
}

func ReadNightVision(ch *RawCharacteristic) *NightVision {
	return &NightVision{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type NitrogenDioxideDensity struct {
	ID    uint64
	Value float64
}

func ReadNitrogenDioxideDensity(ch *RawCharacteristic) *NitrogenDioxideDensity {
	return &NitrogenDioxideDensity{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type ObstructionDetected struct {
	ID    uint64
	Value bool
}

func ReadObstructionDetected(ch *RawCharacteristic) *ObstructionDetected {
	return &ObstructionDetected{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type PM25Density struct {
	ID    uint64
	Value float64
}

func ReadPM25Density(ch *RawCharacteristic) *PM25Density {
	return &PM25Density{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type OccupancyDetected struct {
	ID    uint64
	Value byte
}

func ReadOccupancyDetected(ch *RawCharacteristic) *OccupancyDetected {
	return &OccupancyDetected{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type OpticalZoom struct {
	ID    uint64
	Value float64
}

func ReadOpticalZoom(ch *RawCharacteristic) *OpticalZoom {
	return &OpticalZoom{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type OutletInUse struct {
	ID    uint64
	Value bool
}

func ReadOutletInUse(ch *RawCharacteristic) *OutletInUse {
	return &OutletInUse{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type On struct {
	ID    uint64
	Value bool
}

func ReadOn(ch *RawCharacteristic) *On {
	return &On{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type OzoneDensity struct {
	ID    uint64
	Value float64
}

func ReadOzoneDensity(ch *RawCharacteristic) *OzoneDensity {
	return &OzoneDensity{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type PM10Density struct {
	ID    uint64
	Value float64
}

func ReadPM10Density(ch *RawCharacteristic) *PM10Density {
	return &PM10Density{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type PositionState struct {
	ID    uint64
	Value byte
}

func ReadPositionState(ch *RawCharacteristic) *PositionState {
	return &PositionState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type ProgramMode struct {
	ID    uint64
	Value byte
}

func ReadProgramMode(ch *RawCharacteristic) *ProgramMode {
	return &ProgramMode{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type ProgrammableSwitchEvent struct {
	ID    uint64
	Value byte
}

func ReadProgrammableSwitchEvent(ch *RawCharacteristic) *ProgrammableSwitchEvent {
	return &ProgrammableSwitchEvent{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type RelativeHumidityDehumidifierThreshold struct {
	ID    uint64
	Value float64
}

func ReadRelativeHumidityDehumidifierThreshold(ch *RawCharacteristic) *RelativeHumidityDehumidifierThreshold {
	return &RelativeHumidityDehumidifierThreshold{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type RelativeHumidityHumidifierThreshold struct {
	ID    uint64
	Value float64
}

func ReadRelativeHumidityHumidifierThreshold(ch *RawCharacteristic) *RelativeHumidityHumidifierThreshold {
	return &RelativeHumidityHumidifierThreshold{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type RemainingDuration struct {
	ID    uint64
	Value uint32
}

func ReadRemainingDuration(ch *RawCharacteristic) *RemainingDuration {
	return &RemainingDuration{
		ID:    ch.ID,
		Value: ch.Value.MustUint32(),
	}
}

type ResetFilterIndication struct {
	ID    uint64
	Value byte
}

func ReadResetFilterIndication(ch *RawCharacteristic) *ResetFilterIndication {
	return &ResetFilterIndication{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type RotationDirection struct {
	ID    uint64
	Value int32
}

func ReadRotationDirection(ch *RawCharacteristic) *RotationDirection {
	return &RotationDirection{
		ID:    ch.ID,
		Value: ch.Value.MustInt32(),
	}
}

type RotationSpeed struct {
	ID    uint64
	Value float64
}

func ReadRotationSpeed(ch *RawCharacteristic) *RotationSpeed {
	return &RotationSpeed{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type Saturation struct {
	ID    uint64
	Value float64
}

func ReadSaturation(ch *RawCharacteristic) *Saturation {
	return &Saturation{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type SecuritySystemAlarmType struct {
	ID    uint64
	Value byte
}

func ReadSecuritySystemAlarmType(ch *RawCharacteristic) *SecuritySystemAlarmType {
	return &SecuritySystemAlarmType{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type SecuritySystemCurrentState struct {
	ID    uint64
	Value byte
}

func ReadSecuritySystemCurrentState(ch *RawCharacteristic) *SecuritySystemCurrentState {
	return &SecuritySystemCurrentState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type SecuritySystemTargetState struct {
	ID    uint64
	Value byte
}

func ReadSecuritySystemTargetState(ch *RawCharacteristic) *SecuritySystemTargetState {
	return &SecuritySystemTargetState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type SelectedAudioStreamConfiguration struct {
	ID    uint64
	Value []byte
}

func ReadSelectedAudioStreamConfiguration(ch *RawCharacteristic) *SelectedAudioStreamConfiguration {
	return &SelectedAudioStreamConfiguration{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type SerialNumber struct {
	ID    uint64
	Value string
}

func ReadSerialNumber(ch *RawCharacteristic) *SerialNumber {
	return &SerialNumber{
		ID:    ch.ID,
		Value: ch.Value.MustString(),
	}
}

type ServiceLabelIndex struct {
	ID    uint64
	Value byte
}

func ReadServiceLabelIndex(ch *RawCharacteristic) *ServiceLabelIndex {
	return &ServiceLabelIndex{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type ServiceLabelNamespace struct {
	ID    uint64
	Value byte
}

func ReadServiceLabelNamespace(ch *RawCharacteristic) *ServiceLabelNamespace {
	return &ServiceLabelNamespace{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type SetupDataStreamTransport struct {
	ID    uint64
	Value []byte
}

func ReadSetupDataStreamTransport(ch *RawCharacteristic) *SetupDataStreamTransport {
	return &SetupDataStreamTransport{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type SelectedRTPStreamConfiguration struct {
	ID    uint64
	Value []byte
}

func ReadSelectedRTPStreamConfiguration(ch *RawCharacteristic) *SelectedRTPStreamConfiguration {
	return &SelectedRTPStreamConfiguration{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type SetupEndpoints struct {
	ID    uint64
	Value []byte
}

func ReadSetupEndpoints(ch *RawCharacteristic) *SetupEndpoints {
	return &SetupEndpoints{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type SiriInputType struct {
	ID    uint64
	Value byte
}

func ReadSiriInputType(ch *RawCharacteristic) *SiriInputType {
	return &SiriInputType{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type SlatType struct {
	ID    uint64
	Value byte
}

func ReadSlatType(ch *RawCharacteristic) *SlatType {
	return &SlatType{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type SmokeDetected struct {
	ID    uint64
	Value byte
}

func ReadSmokeDetected(ch *RawCharacteristic) *SmokeDetected {
	return &SmokeDetected{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type StatusActive struct {
	ID    uint64
	Value bool
}

func ReadStatusActive(ch *RawCharacteristic) *StatusActive {
	return &StatusActive{
		ID:    ch.ID,
		Value: ch.Value.MustBool(),
	}
}

type StatusFault struct {
	ID    uint64
	Value byte
}

func ReadStatusFault(ch *RawCharacteristic) *StatusFault {
	return &StatusFault{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type StatusJammed struct {
	ID    uint64
	Value byte
}

func ReadStatusJammed(ch *RawCharacteristic) *StatusJammed {
	return &StatusJammed{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type StatusLowBattery struct {
	ID    uint64
	Value byte
}

func ReadStatusLowBattery(ch *RawCharacteristic) *StatusLowBattery {
	return &StatusLowBattery{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type StatusTampered struct {
	ID    uint64
	Value byte
}

func ReadStatusTampered(ch *RawCharacteristic) *StatusTampered {
	return &StatusTampered{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type StreamingStatus struct {
	ID    uint64
	Value []byte
}

func ReadStreamingStatus(ch *RawCharacteristic) *StreamingStatus {
	return &StreamingStatus{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type SupportedAudioStreamConfiguration struct {
	ID    uint64
	Value []byte
}

func ReadSupportedAudioStreamConfiguration(ch *RawCharacteristic) *SupportedAudioStreamConfiguration {
	return &SupportedAudioStreamConfiguration{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type SupportedDataStreamTransportConfiguration struct {
	ID    uint64
	Value []byte
}

func ReadSupportedDataStreamTransportConfiguration(ch *RawCharacteristic) *SupportedDataStreamTransportConfiguration {
	return &SupportedDataStreamTransportConfiguration{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type SupportedRTPConfiguration struct {
	ID    uint64
	Value []byte
}

func ReadSupportedRTPConfiguration(ch *RawCharacteristic) *SupportedRTPConfiguration {
	return &SupportedRTPConfiguration{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type SupportedVideoStreamConfiguration struct {
	ID    uint64
	Value []byte
}

func ReadSupportedVideoStreamConfiguration(ch *RawCharacteristic) *SupportedVideoStreamConfiguration {
	return &SupportedVideoStreamConfiguration{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type SulphurDioxideDensity struct {
	ID    uint64
	Value float64
}

func ReadSulphurDioxideDensity(ch *RawCharacteristic) *SulphurDioxideDensity {
	return &SulphurDioxideDensity{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type SwingMode struct {
	ID    uint64
	Value byte
}

func ReadSwingMode(ch *RawCharacteristic) *SwingMode {
	return &SwingMode{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type TargetAirPurifierState struct {
	ID    uint64
	Value byte
}

func ReadTargetAirPurifierState(ch *RawCharacteristic) *TargetAirPurifierState {
	return &TargetAirPurifierState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type TargetFanState struct {
	ID    uint64
	Value byte
}

func ReadTargetFanState(ch *RawCharacteristic) *TargetFanState {
	return &TargetFanState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type TargetTiltAngle struct {
	ID    uint64
	Value int32
}

func ReadTargetTiltAngle(ch *RawCharacteristic) *TargetTiltAngle {
	return &TargetTiltAngle{
		ID:    ch.ID,
		Value: ch.Value.MustInt32(),
	}
}

type SetDuration struct {
	ID    uint64
	Value uint32
}

func ReadSetDuration(ch *RawCharacteristic) *SetDuration {
	return &SetDuration{
		ID:    ch.ID,
		Value: ch.Value.MustUint32(),
	}
}

type TargetControlSupportedConfiguration struct {
	ID    uint64
	Value []byte
}

func ReadTargetControlSupportedConfiguration(ch *RawCharacteristic) *TargetControlSupportedConfiguration {
	return &TargetControlSupportedConfiguration{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type TargetControlList struct {
	ID    uint64
	Value []byte
}

func ReadTargetControlList(ch *RawCharacteristic) *TargetControlList {
	return &TargetControlList{
		ID:    ch.ID,
		Value: ch.Value.MustBytes(),
	}
}

type TargetHorizontalTiltAngle struct {
	ID    uint64
	Value int32
}

func ReadTargetHorizontalTiltAngle(ch *RawCharacteristic) *TargetHorizontalTiltAngle {
	return &TargetHorizontalTiltAngle{
		ID:    ch.ID,
		Value: ch.Value.MustInt32(),
	}
}

type TargetHeaterCoolerState struct {
	ID    uint64
	Value byte
}

func ReadTargetHeaterCoolerState(ch *RawCharacteristic) *TargetHeaterCoolerState {
	return &TargetHeaterCoolerState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type TargetHumidifierDehumidifierState struct {
	ID    uint64
	Value byte
}

func ReadTargetHumidifierDehumidifierState(ch *RawCharacteristic) *TargetHumidifierDehumidifierState {
	return &TargetHumidifierDehumidifierState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type TargetPosition struct {
	ID    uint64
	Value byte
}

func ReadTargetPosition(ch *RawCharacteristic) *TargetPosition {
	return &TargetPosition{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type TargetDoorState struct {
	ID    uint64
	Value byte
}

func ReadTargetDoorState(ch *RawCharacteristic) *TargetDoorState {
	return &TargetDoorState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type TargetHeatingCoolingState struct {
	ID    uint64
	Value byte
}

func ReadTargetHeatingCoolingState(ch *RawCharacteristic) *TargetHeatingCoolingState {
	return &TargetHeatingCoolingState{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type TargetRelativeHumidity struct {
	ID    uint64
	Value float64
}

func ReadTargetRelativeHumidity(ch *RawCharacteristic) *TargetRelativeHumidity {
	return &TargetRelativeHumidity{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type TargetTemperature struct {
	ID    uint64
	Value float64
}

func ReadTargetTemperature(ch *RawCharacteristic) *TargetTemperature {
	return &TargetTemperature{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type TemperatureDisplayUnits struct {
	ID    uint64
	Value byte
}

func ReadTemperatureDisplayUnits(ch *RawCharacteristic) *TemperatureDisplayUnits {
	return &TemperatureDisplayUnits{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type TargetVerticalTiltAngle struct {
	ID    uint64
	Value int32
}

func ReadTargetVerticalTiltAngle(ch *RawCharacteristic) *TargetVerticalTiltAngle {
	return &TargetVerticalTiltAngle{
		ID:    ch.ID,
		Value: ch.Value.MustInt32(),
	}
}

type ValveType struct {
	ID    uint64
	Value byte
}

func ReadValveType(ch *RawCharacteristic) *ValveType {
	return &ValveType{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type Version struct {
	ID    uint64
	Value string
}

func ReadVersion(ch *RawCharacteristic) *Version {
	return &Version{
		ID:    ch.ID,
		Value: ch.Value.MustString(),
	}
}

type VOCDensity struct {
	ID    uint64
	Value float64
}

func ReadVOCDensity(ch *RawCharacteristic) *VOCDensity {
	return &VOCDensity{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}

type Volume struct {
	ID    uint64
	Value byte
}

func ReadVolume(ch *RawCharacteristic) *Volume {
	return &Volume{
		ID:    ch.ID,
		Value: ch.Value.MustByte(),
	}
}

type WaterLevel struct {
	ID    uint64
	Value float64
}

func ReadWaterLevel(ch *RawCharacteristic) *WaterLevel {
	return &WaterLevel{
		ID:    ch.ID,
		Value: ch.Value.MustFloat64(),
	}
}
